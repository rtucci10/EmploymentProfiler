//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EmploymentProfilerModel", "FK_PersonAccomplishment", "People", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RS.EmploymentProfiler.Repository.Person), "Accomplishments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RS.EmploymentProfiler.Repository.Accomplishment), true)]
[assembly: EdmRelationshipAttribute("EmploymentProfilerModel", "FK_PersonCompany_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RS.EmploymentProfiler.Repository.Company), "PersonCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RS.EmploymentProfiler.Repository.PersonCompany), true)]
[assembly: EdmRelationshipAttribute("EmploymentProfilerModel", "FK_PersonCompany_Person", "People", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RS.EmploymentProfiler.Repository.Person), "PersonCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RS.EmploymentProfiler.Repository.PersonCompany), true)]
[assembly: EdmRelationshipAttribute("EmploymentProfilerModel", "FK_PersonPortfolioItem", "People", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RS.EmploymentProfiler.Repository.Person), "PortfolioItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RS.EmploymentProfiler.Repository.PortfolioItem), true)]
[assembly: EdmRelationshipAttribute("EmploymentProfilerModel", "FK_PortfolioItemPortfolioItemType", "PortfolioItemTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RS.EmploymentProfiler.Repository.PortfolioItemType), "PortfolioItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RS.EmploymentProfiler.Repository.PortfolioItem), true)]
[assembly: EdmRelationshipAttribute("EmploymentProfilerModel", "FK_SkillSkillType", "SkillTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RS.EmploymentProfiler.Repository.SkillType), "Skills", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RS.EmploymentProfiler.Repository.Skill), true)]
[assembly: EdmRelationshipAttribute("EmploymentProfilerModel", "PersonAddress", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RS.EmploymentProfiler.Repository.Address), "People", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RS.EmploymentProfiler.Repository.Person))]
[assembly: EdmRelationshipAttribute("EmploymentProfilerModel", "PersonSkill", "People", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RS.EmploymentProfiler.Repository.Person), "Skills", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RS.EmploymentProfiler.Repository.Skill))]

#endregion

namespace RS.EmploymentProfiler.Repository
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EmploymentProfilerDB : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EmploymentProfilerDB object using the connection string found in the 'EmploymentProfilerDB' section of the application configuration file.
        /// </summary>
        public EmploymentProfilerDB() : base("name=EmploymentProfilerDB", "EmploymentProfilerDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EmploymentProfilerDB object.
        /// </summary>
        public EmploymentProfilerDB(string connectionString) : base(connectionString, "EmploymentProfilerDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EmploymentProfilerDB object.
        /// </summary>
        public EmploymentProfilerDB(EntityConnection connection) : base(connection, "EmploymentProfilerDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Accomplishment> Accomplishments
        {
            get
            {
                if ((_Accomplishments == null))
                {
                    _Accomplishments = base.CreateObjectSet<Accomplishment>("Accomplishments");
                }
                return _Accomplishments;
            }
        }
        private ObjectSet<Accomplishment> _Accomplishments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonCompany> PersonCompanies
        {
            get
            {
                if ((_PersonCompanies == null))
                {
                    _PersonCompanies = base.CreateObjectSet<PersonCompany>("PersonCompanies");
                }
                return _PersonCompanies;
            }
        }
        private ObjectSet<PersonCompany> _PersonCompanies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioItem> PortfolioItems
        {
            get
            {
                if ((_PortfolioItems == null))
                {
                    _PortfolioItems = base.CreateObjectSet<PortfolioItem>("PortfolioItems");
                }
                return _PortfolioItems;
            }
        }
        private ObjectSet<PortfolioItem> _PortfolioItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioItemType> PortfolioItemTypes
        {
            get
            {
                if ((_PortfolioItemTypes == null))
                {
                    _PortfolioItemTypes = base.CreateObjectSet<PortfolioItemType>("PortfolioItemTypes");
                }
                return _PortfolioItemTypes;
            }
        }
        private ObjectSet<PortfolioItemType> _PortfolioItemTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Skill> Skills
        {
            get
            {
                if ((_Skills == null))
                {
                    _Skills = base.CreateObjectSet<Skill>("Skills");
                }
                return _Skills;
            }
        }
        private ObjectSet<Skill> _Skills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SkillType> SkillTypes
        {
            get
            {
                if ((_SkillTypes == null))
                {
                    _SkillTypes = base.CreateObjectSet<SkillType>("SkillTypes");
                }
                return _SkillTypes;
            }
        }
        private ObjectSet<SkillType> _SkillTypes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accomplishments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccomplishments(Accomplishment accomplishment)
        {
            base.AddObject("Accomplishments", accomplishment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonCompanies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonCompanies(PersonCompany personCompany)
        {
            base.AddObject("PersonCompanies", personCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioItems(PortfolioItem portfolioItem)
        {
            base.AddObject("PortfolioItems", portfolioItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioItemTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioItemTypes(PortfolioItemType portfolioItemType)
        {
            base.AddObject("PortfolioItemTypes", portfolioItemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Skills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSkills(Skill skill)
        {
            base.AddObject("Skills", skill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SkillTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSkillTypes(SkillType skillType)
        {
            base.AddObject("SkillTypes", skillType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmploymentProfilerModel", Name="Accomplishment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Accomplishment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Accomplishment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        public static Accomplishment CreateAccomplishment(global::System.Int32 id, global::System.String description, global::System.String companyId, global::System.Int32 personId)
        {
            Accomplishment accomplishment = new Accomplishment();
            accomplishment.Id = id;
            accomplishment.Description = description;
            accomplishment.CompanyId = companyId;
            accomplishment.PersonId = personId;
            return accomplishment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.String _CompanyId;
        partial void OnCompanyIdChanging(global::System.String value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "FK_PersonAccomplishment", "People")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("EmploymentProfilerModel.FK_PersonAccomplishment", "People").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("EmploymentProfilerModel.FK_PersonAccomplishment", "People").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("EmploymentProfilerModel.FK_PersonAccomplishment", "People");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("EmploymentProfilerModel.FK_PersonAccomplishment", "People", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmploymentProfilerModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Address CreateAddress(global::System.Int32 id)
        {
            Address address = new Address();
            address.Id = id;
            return address;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Line1
        {
            get
            {
                return _Line1;
            }
            set
            {
                OnLine1Changing(value);
                ReportPropertyChanging("Line1");
                _Line1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Line1");
                OnLine1Changed();
            }
        }
        private global::System.String _Line1;
        partial void OnLine1Changing(global::System.String value);
        partial void OnLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Line2
        {
            get
            {
                return _Line2;
            }
            set
            {
                OnLine2Changing(value);
                ReportPropertyChanging("Line2");
                _Line2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Line2");
                OnLine2Changed();
            }
        }
        private global::System.String _Line2;
        partial void OnLine2Changing(global::System.String value);
        partial void OnLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Line3
        {
            get
            {
                return _Line3;
            }
            set
            {
                OnLine3Changing(value);
                ReportPropertyChanging("Line3");
                _Line3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Line3");
                OnLine3Changed();
            }
        }
        private global::System.String _Line3;
        partial void OnLine3Changing(global::System.String value);
        partial void OnLine3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private Nullable<global::System.Int32> _Zip;
        partial void OnZipChanging(Nullable<global::System.Int32> value);
        partial void OnZipChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "PersonAddress", "People")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("EmploymentProfilerModel.PersonAddress", "People");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("EmploymentProfilerModel.PersonAddress", "People", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmploymentProfilerModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Company CreateCompany(global::System.Int32 id)
        {
            Company company = new Company();
            company.Id = id;
            return company;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "FK_PersonCompany_Company", "PersonCompany")]
        public EntityCollection<PersonCompany> PersonCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonCompany>("EmploymentProfilerModel.FK_PersonCompany_Company", "PersonCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonCompany>("EmploymentProfilerModel.FK_PersonCompany_Company", "PersonCompany", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmploymentProfilerModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="age">Initial value of the Age property.</param>
        public static Person CreatePerson(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.Int16 age)
        {
            Person person = new Person();
            person.Id = id;
            person.FirstName = firstName;
            person.LastName = lastName;
            person.Age = age;
            return person;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private global::System.Int16 _Age;
        partial void OnAgeChanging(global::System.Int16 value);
        partial void OnAgeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "FK_PersonAccomplishment", "Accomplishments")]
        public EntityCollection<Accomplishment> Accomplishments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Accomplishment>("EmploymentProfilerModel.FK_PersonAccomplishment", "Accomplishments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Accomplishment>("EmploymentProfilerModel.FK_PersonAccomplishment", "Accomplishments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "FK_PersonCompany_Person", "PersonCompany")]
        public EntityCollection<PersonCompany> PersonCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonCompany>("EmploymentProfilerModel.FK_PersonCompany_Person", "PersonCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonCompany>("EmploymentProfilerModel.FK_PersonCompany_Person", "PersonCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "FK_PersonPortfolioItem", "PortfolioItems")]
        public EntityCollection<PortfolioItem> PortfolioItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioItem>("EmploymentProfilerModel.FK_PersonPortfolioItem", "PortfolioItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioItem>("EmploymentProfilerModel.FK_PersonPortfolioItem", "PortfolioItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "PersonAddress", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("EmploymentProfilerModel.PersonAddress", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("EmploymentProfilerModel.PersonAddress", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "PersonSkill", "Skills")]
        public EntityCollection<Skill> Skills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Skill>("EmploymentProfilerModel.PersonSkill", "Skills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Skill>("EmploymentProfilerModel.PersonSkill", "Skills", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmploymentProfilerModel", Name="PersonCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonCompany object.
        /// </summary>
        /// <param name="people_Id">Initial value of the People_Id property.</param>
        /// <param name="companies_Id">Initial value of the Companies_Id property.</param>
        public static PersonCompany CreatePersonCompany(global::System.Int32 people_Id, global::System.Int32 companies_Id)
        {
            PersonCompany personCompany = new PersonCompany();
            personCompany.People_Id = people_Id;
            personCompany.Companies_Id = companies_Id;
            return personCompany;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 People_Id
        {
            get
            {
                return _People_Id;
            }
            set
            {
                if (_People_Id != value)
                {
                    OnPeople_IdChanging(value);
                    ReportPropertyChanging("People_Id");
                    _People_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("People_Id");
                    OnPeople_IdChanged();
                }
            }
        }
        private global::System.Int32 _People_Id;
        partial void OnPeople_IdChanging(global::System.Int32 value);
        partial void OnPeople_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Companies_Id
        {
            get
            {
                return _Companies_Id;
            }
            set
            {
                if (_Companies_Id != value)
                {
                    OnCompanies_IdChanging(value);
                    ReportPropertyChanging("Companies_Id");
                    _Companies_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Companies_Id");
                    OnCompanies_IdChanged();
                }
            }
        }
        private global::System.Int32 _Companies_Id;
        partial void OnCompanies_IdChanging(global::System.Int32 value);
        partial void OnCompanies_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "FK_PersonCompany_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("EmploymentProfilerModel.FK_PersonCompany_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("EmploymentProfilerModel.FK_PersonCompany_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("EmploymentProfilerModel.FK_PersonCompany_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("EmploymentProfilerModel.FK_PersonCompany_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "FK_PersonCompany_Person", "People")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("EmploymentProfilerModel.FK_PersonCompany_Person", "People").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("EmploymentProfilerModel.FK_PersonCompany_Person", "People").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("EmploymentProfilerModel.FK_PersonCompany_Person", "People");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("EmploymentProfilerModel.FK_PersonCompany_Person", "People", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmploymentProfilerModel", Name="PortfolioItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="portfolioItemType_Id">Initial value of the PortfolioItemType_Id property.</param>
        public static PortfolioItem CreatePortfolioItem(global::System.Int32 id, global::System.String name, global::System.String url, global::System.String description, global::System.Int32 personId, global::System.Int32 portfolioItemType_Id)
        {
            PortfolioItem portfolioItem = new PortfolioItem();
            portfolioItem.Id = id;
            portfolioItem.Name = name;
            portfolioItem.Url = url;
            portfolioItem.Description = description;
            portfolioItem.PersonId = personId;
            portfolioItem.PortfolioItemType_Id = portfolioItemType_Id;
            return portfolioItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PortfolioItemType_Id
        {
            get
            {
                return _PortfolioItemType_Id;
            }
            set
            {
                OnPortfolioItemType_IdChanging(value);
                ReportPropertyChanging("PortfolioItemType_Id");
                _PortfolioItemType_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortfolioItemType_Id");
                OnPortfolioItemType_IdChanged();
            }
        }
        private global::System.Int32 _PortfolioItemType_Id;
        partial void OnPortfolioItemType_IdChanging(global::System.Int32 value);
        partial void OnPortfolioItemType_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "FK_PersonPortfolioItem", "People")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("EmploymentProfilerModel.FK_PersonPortfolioItem", "People").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("EmploymentProfilerModel.FK_PersonPortfolioItem", "People").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("EmploymentProfilerModel.FK_PersonPortfolioItem", "People");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("EmploymentProfilerModel.FK_PersonPortfolioItem", "People", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "FK_PortfolioItemPortfolioItemType", "PortfolioItemTypes")]
        public PortfolioItemType PortfolioItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioItemType>("EmploymentProfilerModel.FK_PortfolioItemPortfolioItemType", "PortfolioItemTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioItemType>("EmploymentProfilerModel.FK_PortfolioItemPortfolioItemType", "PortfolioItemTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PortfolioItemType> PortfolioItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioItemType>("EmploymentProfilerModel.FK_PortfolioItemPortfolioItemType", "PortfolioItemTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PortfolioItemType>("EmploymentProfilerModel.FK_PortfolioItemPortfolioItemType", "PortfolioItemTypes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmploymentProfilerModel", Name="PortfolioItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioItemType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PortfolioItemType CreatePortfolioItemType(global::System.Int32 id, global::System.String name, global::System.String description)
        {
            PortfolioItemType portfolioItemType = new PortfolioItemType();
            portfolioItemType.Id = id;
            portfolioItemType.Name = name;
            portfolioItemType.Description = description;
            return portfolioItemType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "FK_PortfolioItemPortfolioItemType", "PortfolioItems")]
        public EntityCollection<PortfolioItem> PortfolioItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioItem>("EmploymentProfilerModel.FK_PortfolioItemPortfolioItemType", "PortfolioItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioItem>("EmploymentProfilerModel.FK_PortfolioItemPortfolioItemType", "PortfolioItems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmploymentProfilerModel", Name="Skill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Skill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Skill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="skillType_Id">Initial value of the SkillType_Id property.</param>
        public static Skill CreateSkill(global::System.Int32 id, global::System.Int32 skillType_Id)
        {
            Skill skill = new Skill();
            skill.Id = id;
            skill.SkillType_Id = skillType_Id;
            return skill;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SkillType_Id
        {
            get
            {
                return _SkillType_Id;
            }
            set
            {
                OnSkillType_IdChanging(value);
                ReportPropertyChanging("SkillType_Id");
                _SkillType_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SkillType_Id");
                OnSkillType_IdChanged();
            }
        }
        private global::System.Int32 _SkillType_Id;
        partial void OnSkillType_IdChanging(global::System.Int32 value);
        partial void OnSkillType_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "FK_SkillSkillType", "SkillTypes")]
        public SkillType SkillType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkillType>("EmploymentProfilerModel.FK_SkillSkillType", "SkillTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkillType>("EmploymentProfilerModel.FK_SkillSkillType", "SkillTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SkillType> SkillTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkillType>("EmploymentProfilerModel.FK_SkillSkillType", "SkillTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SkillType>("EmploymentProfilerModel.FK_SkillSkillType", "SkillTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "PersonSkill", "People")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("EmploymentProfilerModel.PersonSkill", "People");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("EmploymentProfilerModel.PersonSkill", "People", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmploymentProfilerModel", Name="SkillType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SkillType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SkillType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static SkillType CreateSkillType(global::System.Int32 id)
        {
            SkillType skillType = new SkillType();
            skillType.Id = id;
            return skillType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmploymentProfilerModel", "FK_SkillSkillType", "Skills")]
        public EntityCollection<Skill> Skills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Skill>("EmploymentProfilerModel.FK_SkillSkillType", "Skills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Skill>("EmploymentProfilerModel.FK_SkillSkillType", "Skills", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
